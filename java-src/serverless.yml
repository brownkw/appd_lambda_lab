service: appd-lambda-java

provider:
  name: aws
  runtime: java8

  stage: dev
  region: us-west-2
  environment:
    ORDERS_TABLE_NAME: ${self:service}-${opt:state, self:provider.stage}
    AWS_REGION_STR: ${opt:region, self:provider.region}
    APPDYNAMICS_ACCOUNT_NAME: "aws-sandbox"
    APPDYNAMICS_APPLICATION_NAME: "WayneLambdaTest"
    APPDYNAMICS_CONTROLLER_HOST: "aws-sandbox.saas.appdynamics.com"
    APPDYNAMICS_SERVERLESS_API_ENDPOINT: "https://pdx-sls-agent-api.saas.appdynamics.com"
    APPDYNAMICS_CONTROLLER_PORT: 443
    APPDYNAMICS_LOG_LEVEL: "DEBUG"

  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - lambda:InvokeFunction
      Resource: "*"

package:
  artifact: 'target/appd-lambda-java-${self:provider.stage}.jar'

resources:
  Resources:
    ordersTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        TableName: ${self:provider.environment.ORDERS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"

functions:
  lambda-1:
    handler: com.appdynamics.lambda.FrontEndHandler
    timeout: 900
    memorySize: 512
    environment:
      APPDYNAMICS_TIER_NAME: ${self:service}-lambda-1
    events:
      - http:
          path: /{proxy+}
          method: any  
  lambda-2:
    handler: com.appdynamics.lambda.BackEndHandler
    timeout: 900
    memorySize: 512
    environment:
      APPDYNAMICS_TIER_NAME: ${self:service}-lambda-2